<!-- Example of ossec.conf file Configuration -->

<ossec_config>
  <global>
    <jsonout_output>yes</jsonout_output>					<!-- This Enable alerts to be written in JSON format to "/var/ossec/logs/alerts/alerts.json" file -->
    <alerts_log>yes</alerts_log>						<!-- This setting enables the logging of alerts in a human-readable, plain text format to the "/var/ossec/logs/alerts/alerts.log" file  -->
    <logall>yes</logall>							<!-- Logs all events received by the manager not just the ones that trigger an Alert to "/var/ossec/logs/archives/archives.log" file  --> 
    <logall_json>yes</logall_json>						<!-- similar to "<logall>" option but written in json format to "/var/ossec/logs/archives/archives.json" file  -->
    <email_notification>no</email_notification>
    <smtp_server>smtp.example.wazuh.com</smtp_server>				<!-- Hostname or IP address of the SMTP server to send alerts to email if "<email_notification>" is enabled -->
    <email_from>wazuh@example.wazuh.com</email_from>				<!-- This sets the "From" email address that will appear on the email notifications -->
    <email_to>recipient@example.wazuh.com</email_to>				<!-- Primary recipient's email address for the alerts -->
    <email_maxperhour>12</email_maxperhour>					<!-- Number of emails sent per hour - To prevent email flooding -->
    <email_log_source>alerts.log</email_log_source>				<!-- This specifies the source log file for the content of the email alerts  -->
    <agents_disconnection_time>10m</agents_disconnection_time>			<!-- This sets the amount of time an agent can be inactive before it is considered "disconnected"  -->
    <agents_disconnection_alert_time>0</agents_disconnection_alert_time>	<!-- This defines how long the manager should wait after an agent has been marked as "disconnected" before sending a disconnection alert -->
    <update_check>yes</update_check>						<!-- Wazuh manager will check for new software updates -->
  </global>

	<!-- This sets the minimum alert level required for an event to be written to the "alerts.log" and "alerts.json" files -->
  <alerts>
    <log_alert_level>3</log_alert_level>
    <email_alert_level>12</email_alert_level>
  </alerts>

	<!-- Choose between "plain", "json", or "plain,json" for the format of internal logs -->
  <logging>
    <log_format>plain</log_format>
  </logging>

	<!-- The "<remote>" block configures how the Wazuh manager listens for incoming connections from its managed agents  -->
  <remote>
    <connection>secure</connection>
    <port>1514</port>
    <protocol>tcp</protocol>
    <queue_size>131072</queue_size>
  </remote>

	<!-- This configuration block, sets up the connection between the Wazuh manager and the Wazuh indexer  -->
  <indexer>
    <enabled>yes</enabled>
    <hosts>
      <host>https://X.X.X.X:9200</host> "The URL of the indexer node, the manager should connect to"
    </hosts>
    <ssl>
      <certificate_authorities>		<!-- This sub-block define the certificate authorities the manager should trust  -->
        <ca>/etc/filebeat/certs/root-ca.pem</ca>
      </certificate_authorities>
      <certificate>/etc/filebeat/certs/filebeat.pem</certificate>
      <key>/etc/filebeat/certs/filebeat-key.pem</key>
    </ssl>
  </indexer>

	<!-- Log Analysis -->
  <!-- The "<localfile>" block define what the manager or the agent should be monitoring
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/watchguard.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/auth.log</location>
  </localfile>

	<!-- This block instructs the agent to run a command periodically and treat its output as log data  -->
  <localfile>
    <log_format>command</log_format>
    <command>df -P</command>
    <frequency>360</frequency>
  </localfile>


</ossec_config>
